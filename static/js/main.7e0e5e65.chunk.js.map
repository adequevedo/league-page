{"version":3,"sources":["components/Summary.js","components/Navbar.js","components/Home.js","components/Records.js","components/LocalStats.js","components/App.js","reportWebVitals.js","index.js"],"names":["Summary","NavBar","AppBar","position","Toolbar","Grid","justify","container","spacing","item","Typography","variant","color","Button","justifyContent","href","Home","className","Component","Records","props","data","require","LocalStats","listItems","map","x","owner","year","team_name","wins","losses","points_for","points_against","season_finish","final_finish","console","log","App","Navbar","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u4XAqBeA,I,wCCoBAC,EAjCA,WACb,OACE,8BACA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACAC,QAAQ,gBACRC,WAAS,EACTC,QAAS,GAHT,UAKE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,UAAlC,sCAKF,eAACP,EAAA,EAAD,CAAMI,MAAI,EAAV,UACE,cAACI,EAAA,EAAD,CAAQF,QAAQ,YAAYC,MAAM,UAAUE,eAAe,QAAQC,KAAK,QAAxE,kBAGA,cAACF,EAAA,EAAD,CAAQF,QAAQ,YAAYC,MAAM,UAAUE,eAAe,QAAQC,KAAK,SAAxE,mBAGA,cAACF,EAAA,EAAD,CAAQF,QAAQ,YAAYC,MAAM,UAAUE,eAAe,QAAQC,KAAK,WAAxE,kCCLGC,G,6KApBX,OACE,sBAAKC,UAAU,OAAf,UACA,iDACA,4CACA,6DACA,8CACA,2DACyB,uBADzB,iDAE8C,uBAF9C,6BAG0B,uBAH1B,qCAIkC,uBAJlC,0BAKuB,uBALvB,4BAMyB,iC,GAdZC,cCOJC,MATf,SAAiBC,GACf,OACE,gCACA,yCACA,gDCHAC,G,kBAAOC,EAAQ,KA4BJC,EAzBI,WACjB,IAEMC,EAAYH,EAAKI,KAAI,SAACC,GAAD,OACrB,+BACGA,EAAEC,MADL,KACcD,EAAEE,KACZ,+BACE,6CAAgBF,EAAEG,aAClB,wCAAWH,EAAEI,QACb,0CAAaJ,EAAEK,UACf,8CAAiBL,EAAEM,cACnB,kDAAqBN,EAAEO,kBACvB,yDAA4BP,EAAEQ,iBAC9B,sDAAyBR,EAAES,qBATxBT,EAAEE,SAejB,OADAQ,QAAQC,IAjBG,IAmBT,8BACGb,K,eC6BQc,E,uKArCX,OAEE,cAAC,IAAD,UACE,sBAAKrB,UAAU,MAAf,UACE,8BACE,mCACA,cAACsB,EAAD,QAKJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,kB,GAxBMtB,aCLHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e0e5e65.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction Summary(props) {\r\n  return (\r\n    <div>\r\n    <h1>{props.name}</h1>\r\n    <p>Record: {props.wins} - {props.losses}</p>\r\n    <p>Win %: {(parseInt(props.wins)/(parseInt(props.wins) + parseInt(props.losses))).toFixed(4)}</p>\r\n    <p>Points For: {props.pointsFor}</p>\r\n    <p>Points Against: {props.pointsAgainst}</p>\r\n    <p>Team Names: </p>\r\n      {props.teamNames.map(name => (\r\n        <li>\r\n          {name}\r\n        </li>\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nconst NavBar = () => {\r\n  return(\r\n    <div>\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Grid\r\n        justify=\"space-between\"\r\n        container\r\n        spacing={24}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"title\" color=\"inherit\">\r\n            Goodbye Forever Mr. Vo\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" justifyContent=\"right\" href=\"/home\">\r\n            Home\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" justifyContent=\"right\" href=\"/stats\">\r\n            Stats\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" justifyContent=\"right\" href=\"/records\">\r\n            Records\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n    </div>\r\n  )\r\n}\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport '../css/home.css';\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n      <h1>League HomePage</h1>\r\n      <h2>Est. 2014 </h2>\r\n      <h3>Current Champ: Buster Brown</h3>\r\n      <h3>Past Champs:</h3>\r\n      <h4>\r\n      2014: Fuck ISIS - Dan Ken<br />\r\n      2015 - The South Will Rise Again - Nace Bethel<br />\r\n      2016 - Trench Sosa - Renzo<br />\r\n      2017 - Fantasy Dropout - Dirty Dev<br />\r\n      2018 - Nuk Da Bomb - Al<br />\r\n      2019 - Anal Frank - Temmy<br />\r\n      </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n\r\nfunction Records(props) {\r\n  return (\r\n    <div>\r\n    <h1>Records</h1>\r\n    <p>Coming Soon</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Records;\r\n","import React, { useState, useEffect  } from 'react';\r\n// import '../css/localstats.css';\r\n// import data from './data/yearly_stats.json';\r\nvar data = require('./data/yearly_stats.json')\r\n\r\n\r\nconst LocalStats = () => {\r\n  var dict = {};\r\n\r\n  const listItems = data.map((x) =>\r\n        <li key={x.year}>\r\n          {x.owner}: {x.year}\r\n            <ul>\r\n              <li>Team Name: {x.team_name}</li>\r\n              <li>wins: {x.wins}</li>\r\n              <li>losses: {x.losses}</li>\r\n              <li>Points for: {x.points_for}</li>\r\n              <li>Points against: {x.points_against}</li>\r\n              <li>Regular Season Finish: {x.season_finish}</li>\r\n              <li>Post Season Finish: {x.final_finish}</li>\r\n            </ul>\r\n        </li>\r\n    );\r\n\r\n  console.log(dict)\r\n  return (\r\n    <div>\r\n      {listItems}\r\n    </div>\r\n  );\r\n};\r\nexport default LocalStats;\r\n","import React, { Component } from 'react';\r\nimport '../css/App.css';\r\nimport Players from './Players'\r\nimport Summary from './Summary'\r\nimport Navbar from './Navbar'\r\nimport Home from './Home'\r\nimport Records from './Records'\r\nimport Stats from './Stats'\r\nimport LocalStats from './LocalStats'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Router>\r\n        <div className=\"App\">\r\n          <nav>\r\n            <>\r\n            <Navbar />\r\n            </>\r\n          </nav>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/records\">\r\n            <Records />\r\n          </Route>\r\n          <Route path=\"/stats\">\r\n            <LocalStats />\r\n          </Route>\r\n          <Route path=\"/localstats\">\r\n            <LocalStats />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\n// function Stats(){\r\n//   return(\r\n//     <h1>Stats</h1>\r\n//   )\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport Players from './components/Players';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}